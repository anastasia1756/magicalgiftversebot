const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");
const cheerio = require("cheerio");
require("dotenv").config();

const BOT_TOKEN = process.env.BOT_TOKEN;
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

const keywordToGiftName = {
  –ø–µ–ø–µ: "Plush Pepe",
  —Å–µ–π–ª–æ—Ä: "Heart Locket",
  –∫–µ–ø–∫–∞: "Durov's Cap",
  –ø–µ—Ä—Å–∏–∫: "Precious Peach",
  —à–ª–µ–º: "Heroic Helmet",
  "—à–ª–µ–º —Å–ø–∞—Ä—Ç–∞–Ω—Ü–∞": "Heroic Helmet",
  –∫–∞—Ä—Ç—å–µ: "Nail Bracelet",
  –≥–≤–æ–∑–¥—å: "Nail Bracelet",
  —Å—É–º–∫–∞: "Loot Bag",
  –∞–ª–º–∞–∑: "Astral Shard",
  "–∞—Å—Ç—Ä–∞–ª —à–∞—Ä–¥": "Astral Shard",
  —à–∞—Ä–¥: "Astral Shard",
  "–≥–µ–º —Å–∏–≥–Ω–µ—Ç": "Gem Signet",
  "–∫–æ–ª—å—Ü–æ –≥–µ–º": "Gem Signet",
  –∏–æ–Ω: "Ion Gem",
  –≥–µ–º: "Ion Gem",
  –æ—Å–∫–∞—Ä: "Mini Oscar",
  –¥—É—Ö–∏: "Perfume Bottle",
  –ø–∞—Ä—Ñ—é–º: "Perfume Bottle",
  –∑–µ–ª—å–µ: "Magic Potion",
  –ª–∞–º–ø–∞: "Genie Lamp",
  –∫–æ—Ç–∏–∫: "Scared Cat",
  –∫–æ—à–∫–∞: "Scared Cat",
  –∫–æ—Ç: "Scared Cat",
  –≥—É–±—ã: "Sharp Tongue",
  –≥—É–±–∫–∏: "Sharp Tongue",
  —á–∞—Å—ã: "Swiss Watch",
  –ª—è–≥—É—à–∫–∞: "Kissed Frog",
  –∂–∞–±–∫–∞: "Kissed Frog",
  –∂–∞–±–∞: "Kissed Frog",
  —Ñ—Ä–æ–≥: "Kissed Frog",
  "–∫–∏—Å—Å–¥ —Ñ—Ä–æ–≥": "Kissed Frog",
  —á–µ—Ä–µ–ø: "Electric Skull",
  —Å–∏–≥–∞—Ä–∞: "Vintage Cigar",
  —Å–∏–≥–∞—Ä–µ—Ç–∞: "Vintage Cigar",
  –Ω–µ–∫–æ: "Neko Helmet",
  "–Ω–µ–∫–æ —Ö–µ–ª–º–µ—Ç": "Neko Helmet",
  "–Ω–µ–∫–æ —à–ª–µ–º": "Neko Helmet",
  –∫–æ–ª—å—Ü–æ: "Signet Ring",
  –º–∏—à–∫–∞: "Toy Bear",
  –º–µ–¥–≤–µ–¥—å: "Toy Bear",
  –≤—É–¥—É: "Voodoo Doll",
  "–∫—É–∫–ª–∞ –≤—É–¥—É": "Voodoo Doll",
  —Ä–æ–∑–∞: "Eternal Rose",
  —Ä–æ–∑–æ—á–∫–∞: "Eternal Rose",
  —Ç—ã–∫–≤–∞: "Mad Pumpkin",
  —Å–≤–µ—á–∞: "Love Candle",
  "–ª–∞–≤ –∫–µ–Ω–¥–ª": "Love Candle",
  "—Å–≤–µ—á–∫–∞ —Å–µ—Ä–¥—Ü–µ": "Love Candle",
  —à–ª—è–ø–∞: "Top Hat",
  —Ü–∏–ª–∏–Ω–¥—Ä: "Top Hat",
  —Ç–æ–ø—Ö–µ—Ç: "Top Hat",
  "—Ç–æ–ø —Ö–µ—Ç": "Top Hat",
  –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫: "Sleigh Bell",
  "—Å–ª–µ–π –±–µ–ª–ª": "Sleigh Bell",
  "–ª–∞–≤ –ø–æ—É—à–Ω": "Love Potion",
  "–ª–∞–≤ –ø–æ—É—à–µ–Ω": "Love Potion",
  "–ª—é–±–æ–≤–Ω–æ–µ –∑–µ–ª—å–µ": "Love Potion",
  —Ä–∞–¥–æ—Å—Ç—å: "Joyful Bundle",
  "–¥–∂–æ–π—Ñ—É–ª –±–∞–Ω–¥–ª": "Joyful Bundle",
  –º–µ—Ç–ª–∞: "Flying Broom",
  "—Ü–≤–µ—Ç–æ—á–µ–∫ —á–µ—Ä–µ–ø": "Skull Flower",
  "—Ü–≤–µ—Ç–æ–∫ —á–µ—Ä–µ–ø": "Skull Flower",
  —Å–∫—É–ª: "Skull Flower",
  "—Å–∫–∞–ª —Ñ–ª–∞–≤–µ—Ä": "Skull Flower",
  –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª—å: "Record Player",
  –ø–ª–∞—Å—Ç–∏–Ω–∫–∞: "Record Player",
  —à–∞—Ä: "Crystal Ball",
  "–∫—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π —à–∞—Ä": "Crystal Ball",
  —Å–µ—Ä–¥—Ü–µ: "Trapped Heart",
  –ª–æ–≤—É—à–∫–∞: "Trapped Heart",
  "—Ç—Ä–µ–ø–¥ —Ö–∞—Ä—Ç": "Trapped Heart",
  –∫–æ—Ä–æ–±–∫–∞: "Valentine Box",
  "–∫–æ—Ä–æ–±–∫–∞ –∫–æ–Ω—Ñ–µ—Ç": "Valentine Box",
  –∑–≤–µ–∑–¥–∞: "Hanging Star",
  –∑–≤–µ–∑–¥–æ—á–∫–∞: "Hanging Star",
  –±–∞–±–æ—á–∫–∞: "Bow Tie",
  –º–∞—Ñ—Ñ–∏–Ω: "Bunny Muffin",
  –º–∞—Ñ–∏–Ω: "Bunny Muffin",
  —Å–∞–∫—É—Ä–∞: "Sakura Flower",
  –±—É–∫–µ—Ç: "Lush Bouquet",
  –≥—Ä–∏–±: "Spy Agaric",
  "—Å–ø–∞–π –∞–≥–∞—Ä–∏–∫": "Spy Agaric",
  –ø–µ—Ä—á–∞—Ç–∫–∏: "Snow Mittens",
  "–Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π —à–∞—Ä": "Snow Globe",
  –±–ª–æ–∫–Ω–æ—Ç: "Star Notepad",
  "–∑–µ–ª—å–µ –≤–µ–¥—å–º—ã": "Hex Pot",
  "—Ö–µ–∫—Å –ø–æ—Ç": "Hex Pot",
  –≥–ª–∞–∑: "Evil Eye",
  –∑–º–µ–π–∫–∞: "Lunar Snake",
  –∑–º–µ—è: "Lunar Snake",
  —Ç–∞–º–∞–≥–æ—á–∏: "Tama Gadget",
  —Ç–∞–º–∞–≥–∞–¥–∂–µ—Ç: "Tama Gadget",
  "—Ç–∞–º–∞ –≥–∞–¥–∂–µ—Ç": "Tama Gadget",
  "—à–ª—è–ø–∞ –≤–µ–¥—å–º—ã": "Witch Hat",
  "–∫–µ–Ω–¥–∏ –∫–µ–π–Ω": "Candy Cane",
  "–≥–∏–ø–Ω–æ –ª–æ–ª–∏–∫": "Hypno Lollipop",
  –≥–∏–ø–Ω–æ–ª–æ–ª–∏–ø–æ–ø: "Hypno Lollipop",
  —Ö–∏–ø–Ω–æ–ª–æ–ª–∏–ø–æ–ø: "Hypno Lollipop",
  –∫—Ä—É–∂–∫–∞: "Holiday Drink",
  –∫—É–ª–æ–Ω—á–∏–∫: "Cupid Charm",
  –ø–æ–¥–≤–µ—Å–∫–∞: "Cupid Charm",
  –∫–æ—Ä–æ–±–∫–∞: "Snake Box",
  —Å–µ—Ä–¥–µ—á–∫–æ: "Cookie Heart",
  –≥–æ–¥: "Big Year",
  —Ü–∏—Ñ—Ä—ã: "Big Year",
  –º–µ—á: "Light Sword",
  "—à–∞–ø–∫–∞ —Å–∞–Ω—Ç—ã": "Santa Hat",
  "—à–ª—è–ø–∞ —Å–∞–Ω—Ç—ã": "Santa Hat",
  "–ø–µ—Ç —Å–Ω–µ–π–∫": "Pet Snake",
  –∫–∞–ª–µ–Ω–¥–∞—Ä—å: "Desk Calendar",
  "–±–µ—Ä–∏ –±–æ–∫—Å": "Berry Box",
  "–±–µ—Ä—Ä–∏ –±–æ–∫—Å": "Berry Box",
  "–∫–æ—Ä–æ–±–∫–∞ –∫–æ–Ω—Ñ–µ—Ç": "Berry Box",
  —Å–≤–µ—á–∫–∞: "B-Day Candle",
  –±–µ–∑–¥–µ–π: "B-Day Candle",
  "–¥–∂–µ–∫ –∏–Ω –∑–µ –±–æ–∫—Å": "VJack-in-the-Box",
  –∫–æ—Ä–æ–±–∫–∞: "Jack-in-the-Box",
  –¥–∂–µ–∫: "Jack-in-the-Box",
  "–¥–∞–π–º–æ–Ω–¥ —Ä–∏–Ω–≥": "Diamond Ring",
  "–∫–æ–ª—å—Ü–æ –≤ –∫–æ—Ä–æ–±–∫–µ": "Diamond Ring",
  "—à–ª—è–ø–∞ —à—É—Ç–∞": "Jester Hat",
  —è–π—Ü–æ: "Easter Egg",
  –ø—Ä—è–Ω–∏–∫: "Ginger Cookie",
  "–ø—Ä—è–Ω–∏—á–Ω—ã–π —á–µ–ª–æ–≤–µ—á–µ–∫": "Ginger Cookie",
  –ø–µ—á–µ–Ω—å–∫–∞: "Ginger Cookie",
  "–ø–∞—Ç–∏ —Å–ø–∞—Ä–∫–ª": "Party Sparkler",
  –±–µ–Ω–≥–∞–ª—å—Å–∫–∏–π: "Party Sparkler",
  –ø–∞–ª–æ—á–∫–∞: "Party Sparkler",
  –ø–∞–ª–∫–∞: "Party Sparkler",
  –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∏: "Jingle Bells",
  –¥–∂–µ–ª–ª–∏: "Jelly Bunny",
  "–¥–∂–µ–ª–ª–∏ –±–∞–Ω–∏": "Jelly Bunny",
  –∂–µ–ª–µ–π–∫–∞: "Jelly Bunny",
  –∂–µ–ª–µ: "Jelly Bunny",
  –≥–ª–∏–Ω—Ç–≤–µ–π–Ω: "Spiced Wine",
  –ª–æ–ª–∏–ø–æ–ø: "Lol Pop",
  –ª–æ–ª–ª–∏–ø–æ–ø: "Lol Pop",
  —Ç–æ—Ä—Ç: "Homemade Cake",
  —Ç–æ—Ä—Ç–∏–∫: "Homemade Cake",
  –ø–µ—Ä—Å—Ç–µ–Ω—å: "Bonded Ring",
  –Ω–æ—Å–æ–∫: "Xmas Stocking",
  –≤–µ–Ω–æ–∫: "Winter Wreath",
  –∫–∞–ø–∫–µ–π–∫: "Whip Cupcake",
  –±–∞–Ω–∫–∞: "Restless Jar",
  —Å–≤–µ—á–∫–∞: "Eternal Candle",
  –¥–∏–ª–¥–æ: "–±–µ—Å—Ü–µ–Ω–Ω–æ",
};

async function getGiftPriceByName(giftName) {
  try {
    const { data: html } = await axios.get("https://peek.tg/stats");
    const $ = cheerio.load(html);

    let found = null;

    $("h3.font-medium.text-white.text-base.truncate").each((_, el) => {
      const title = $(el).text().trim();
      if (title.toLowerCase() === giftName.toLowerCase()) {
        const container = $(el).closest(".relative.p-4");
        const price = container
          .find("span.text-lg.font-semibold.text-white")
          .text()
          .trim();
        if (price) {
          found = `${title} ‚Äî ${price} TON`;
        }
      }
    });

    return found;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ:", error);
    return null;
  }
}

// ü§ñ –ë–æ—Ç —Å–ª—É—à–∞–µ—Ç
bot.on("message", async (msg) => {
  console.log("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", msg);
  const chatId = msg.chat.id;
  const text = msg.text?.toLowerCase().trim();
  if (!text) return;

  if (text.includes("–¥–∏–ª–¥–æ")) {
    bot.sendMessage(chatId, "–±–µ—Å—Ü–µ–Ω–Ω–æ üíã");
    return;
  }

  // –ò—â–µ–º —Å–∞–º–æ–µ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  let matchedName = null;
  let matchedKeyword = null;

  for (const [keyword, name] of Object.entries(keywordToGiftName)) {
    if (text.includes(keyword.toLowerCase())) {
      if (!matchedKeyword || keyword.length > matchedKeyword.length) {
        matchedKeyword = keyword;
        matchedName = name;
      }
    }
  }

  if (!matchedName) {
    return;
  }

  const priceInfo = await getGiftPriceByName(matchedName);
  if (priceInfo) {
    bot.sendMessage(chatId, `üéÅ ${priceInfo}`);
  } else {
    bot.sendMessage(chatId, "üôà –ù–µ –Ω–∞—à—ë–ª —Ü–µ–Ω—É –Ω–∞ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫.");
  }
});

// –≤–∞—Ä–∏–∞–Ω—Ç —Å —é–∑–µ—Ä–±–æ—Ç —Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º(—Ä–∞–±–æ—Ç–∞–µ—Ç)
// const TelegramBot = require("node-telegram-bot-api");
// const axios = require("axios");
// const cheerio = require("cheerio");

// // ü§ê –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ .env
// // require("dotenv").config();
// const { config } = require("dotenv");
// config();

// // ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
// // const BOT_TOKEN = process.env.BOT_TOKEN;

// const BOT_TOKEN = process.env.BOT_TOKEN;
// const API_ID = parseInt(process.env.API_ID);
// const API_HASH = process.env.API_HASH;
// const SESSION_STRING = process.env.SESSION_STRING;
// // üîÅ –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ ‚Üí –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è
// const keywordToGiftName = {
//   –ø–µ–ø–µ: "Plush Pepe",
//   —Å–µ–π–ª–æ—Ä: "Heart Locket",
//   –∫–µ–ø–∫–∞: "Durov's Cap",
//   –ø–µ—Ä—Å–∏–∫: "Precious Peach",
//   —à–ª–µ–º: "Heroic Helmet",
//   "—à–ª–µ–º —Å–ø–∞—Ä—Ç–∞–Ω—Ü–∞": "Heroic Helmet",
//   –∫–∞—Ä—Ç—å–µ: "Nail Bracelet",
//   –≥–≤–æ–∑–¥—å: "Nail Bracelet",
//   —Å—É–º–∫–∞: "Loot Bag",
//   –∞–ª–º–∞–∑: "Astral Shard",
//   "–∞—Å—Ç—Ä–∞–ª —à–∞—Ä–¥": "Astral Shard",
//   —à–∞—Ä–¥: "Astral Shard",
//   "–≥–µ–º —Å–∏–≥–Ω–µ—Ç": "Gem Signet",
//   "–∫–æ–ª—å—Ü–æ –≥–µ–º": "Gem Signet",
//   –∏–æ–Ω: "Ion Gem",
//   –≥–µ–º: "Ion Gem",
//   –æ—Å–∫–∞—Ä: "Mini Oscar",
//   –¥—É—Ö–∏: "Perfume Bottle",
//   –ø–∞—Ä—Ñ—é–º: "Perfume Bottle",
//   –∑–µ–ª—å–µ: "Magic Potion",
//   –ª–∞–º–ø–∞: "Genie Lamp",
//   –∫–æ—Ç–∏–∫: "Scared Cat",
//   –∫–æ—à–∫–∞: "Scared Cat",
//   –∫–æ—Ç: "Scared Cat",
//   –≥—É–±—ã: "Sharp Tongue",
//   –≥—É–±–∫–∏: "Sharp Tongue",
//   —á–∞—Å—ã: "Swiss Watch",
//   –ª—è–≥—É—à–∫–∞: "Kissed Frog",
//   –∂–∞–±–∫–∞: "Kissed Frog",
//   –∂–∞–±–∞: "Kissed Frog",
//   —Ñ—Ä–æ–≥: "Kissed Frog",
//   "–∫–∏—Å—Å–¥ —Ñ—Ä–æ–≥": "Kissed Frog",
//   —á–µ—Ä–µ–ø: "Electric Skull",
//   —Å–∏–≥–∞—Ä–∞: "Vintage Cigar",
//   —Å–∏–≥–∞—Ä–µ—Ç–∞: "Vintage Cigar",
//   –Ω–µ–∫–æ: "Neko Helmet",
//   "–Ω–µ–∫–æ —Ö–µ–ª–º–µ—Ç": "Neko Helmet",
//   "–Ω–µ–∫–æ —à–ª–µ–º": "Neko Helmet",
//   –∫–æ–ª—å—Ü–æ: "Signet Ring",
//   –º–∏—à–∫–∞: "Toy Bear",
//   –º–µ–¥–≤–µ–¥—å: "Toy Bear",
//   –≤—É–¥—É: "Voodoo Doll",
//   "–∫—É–∫–ª–∞ –≤—É–¥—É": "Voodoo Doll",
//   —Ä–æ–∑–∞: "Eternal Rose",
//   —Ä–æ–∑–æ—á–∫–∞: "Eternal Rose",
//   —Ç—ã–∫–≤–∞: "Mad Pumpkin",
//   —Å–≤–µ—á–∞: "Love Candle",
//   "–ª–∞–≤ –∫–µ–Ω–¥–ª": "Love Candle",
//   "—Å–≤–µ—á–∫–∞ —Å–µ—Ä–¥—Ü–µ": "Love Candle",
//   —à–ª—è–ø–∞: "Top Hat",
//   —Ü–∏–ª–∏–Ω–¥—Ä: "Top Hat",
//   —Ç–æ–ø—Ö–µ—Ç: "Top Hat",
//   "—Ç–æ–ø —Ö–µ—Ç": "Top Hat",
//   –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫: "Sleigh Bell",
//   "—Å–ª–µ–π –±–µ–ª–ª": "Sleigh Bell",
//   "–ª–∞–≤ –ø–æ—É—à–Ω": "Love Potion",
//   "–ª–∞–≤ –ø–æ—É—à–µ–Ω": "Love Potion",
//   "–ª—é–±–æ–≤–Ω–æ–µ –∑–µ–ª—å–µ": "Love Potion",
//   —Ä–∞–¥–æ—Å—Ç—å: "Joyful Bundle",
//   "–¥–∂–æ–π—Ñ—É–ª –±–∞–Ω–¥–ª": "Joyful Bundle",
//   –º–µ—Ç–ª–∞: "Flying Broom",
//   "—Ü–≤–µ—Ç–æ—á–µ–∫ —á–µ—Ä–µ–ø": "Skull Flower",
//   "—Ü–≤–µ—Ç–æ–∫ —á–µ—Ä–µ–ø": "Skull Flower",
//   —Å–∫—É–ª: "Skull Flower",
//   "—Å–∫–∞–ª —Ñ–ª–∞–≤–µ—Ä": "Skull Flower",
//   –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª—å: "Record Player",
//   –ø–ª–∞—Å—Ç–∏–Ω–∫–∞: "Record Player",
//   —à–∞—Ä: "Crystal Ball",
//   "–∫—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π —à–∞—Ä": "Crystal Ball",
//   —Å–µ—Ä–¥—Ü–µ: "Trapped Heart",
//   –ª–æ–≤—É—à–∫–∞: "Trapped Heart",
//   "—Ç—Ä–µ–ø–¥ —Ö–∞—Ä—Ç": "Trapped Heart",
//   –∫–æ—Ä–æ–±–∫–∞: "Valentine Box",
//   "–∫–æ—Ä–æ–±–∫–∞ –∫–æ–Ω—Ñ–µ—Ç": "Valentine Box",
//   –∑–≤–µ–∑–¥–∞: "Hanging Star",
//   –∑–≤–µ–∑–¥–æ—á–∫–∞: "Hanging Star",
//   –±–∞–±–æ—á–∫–∞: "Bow Tie",
//   –º–∞—Ñ—Ñ–∏–Ω: "Bunny Muffin",
//   –º–∞—Ñ–∏–Ω: "Bunny Muffin",
//   —Å–∞–∫—É—Ä–∞: "Sakura Flower",
//   –±—É–∫–µ—Ç: "Lush Bouquet",
//   –≥—Ä–∏–±: "Spy Agaric",
//   "—Å–ø–∞–π –∞–≥–∞—Ä–∏–∫": "Spy Agaric",
//   –ø–µ—Ä—á–∞—Ç–∫–∏: "Snow Mittens",
//   "–Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π —à–∞—Ä": "Snow Globe",
//   –±–ª–æ–∫–Ω–æ—Ç: "Star Notepad",
//   "–∑–µ–ª—å–µ –≤–µ–¥—å–º—ã": "Hex Pot",
//   "—Ö–µ–∫—Å –ø–æ—Ç": "Hex Pot",
//   –≥–ª–∞–∑: "Evil Eye",
//   –∑–º–µ–π–∫–∞: "Lunar Snake",
//   –∑–º–µ—è: "Lunar Snake",
//   —Ç–∞–º–∞–≥–æ—á–∏: "Tama Gadget",
//   —Ç–∞–º–∞–≥–∞–¥–∂–µ—Ç: "Tama Gadget",
//   "—Ç–∞–º–∞ –≥–∞–¥–∂–µ—Ç": "Tama Gadget",
//   "—à–ª—è–ø–∞ –≤–µ–¥—å–º—ã": "Witch Hat",
//   "–∫–µ–Ω–¥–∏ –∫–µ–π–Ω": "Candy Cane",
//   "–≥–∏–ø–Ω–æ –ª–æ–ª–∏–∫": "Hypno Lollipop",
//   –≥–∏–ø–Ω–æ–ª–æ–ª–∏–ø–æ–ø: "Hypno Lollipop",
//   —Ö–∏–ø–Ω–æ–ª–æ–ª–∏–ø–æ–ø: "Hypno Lollipop",
//   –∫—Ä—É–∂–∫–∞: "Holiday Drink",
//   –∫—É–ª–æ–Ω—á–∏–∫: "Cupid Charm",
//   –ø–æ–¥–≤–µ—Å–∫–∞: "Cupid Charm",
//   –∫–æ—Ä–æ–±–∫–∞: "Snake Box",
//   —Å–µ—Ä–¥–µ—á–∫–æ: "Cookie Heart",
//   –≥–æ–¥: "Big Year",
//   —Ü–∏—Ñ—Ä—ã: "Big Year",
//   –º–µ—á: "Light Sword",
//   "—à–∞–ø–∫–∞ —Å–∞–Ω—Ç—ã": "Santa Hat",
//   "—à–ª—è–ø–∞ —Å–∞–Ω—Ç—ã": "Santa Hat",
//   "–ø–µ—Ç —Å–Ω–µ–π–∫": "Pet Snake",
//   –∫–∞–ª–µ–Ω–¥–∞—Ä—å: "Desk Calendar",
//   "–±–µ—Ä–∏ –±–æ–∫—Å": "Berry Box",
//   "–±–µ—Ä—Ä–∏ –±–æ–∫—Å": "Berry Box",
//   "–∫–æ—Ä–æ–±–∫–∞ –∫–æ–Ω—Ñ–µ—Ç": "Berry Box",
//   —Å–≤–µ—á–∫–∞: "B-Day Candle",
//   –±–µ–∑–¥–µ–π: "B-Day Candle",
//   "–¥–∂–µ–∫ –∏–Ω –∑–µ –±–æ–∫—Å": "VJack-in-the-Box",
//   –∫–æ—Ä–æ–±–∫–∞: "Jack-in-the-Box",
//   –¥–∂–µ–∫: "Jack-in-the-Box",
//   "–¥–∞–π–º–æ–Ω–¥ —Ä–∏–Ω–≥": "Diamond Ring",
//   "–∫–æ–ª—å—Ü–æ –≤ –∫–æ—Ä–æ–±–∫–µ": "Diamond Ring",
//   "—à–ª—è–ø–∞ —à—É—Ç–∞": "Jester Hat",
//   —è–π—Ü–æ: "Easter Egg",
//   –ø—Ä—è–Ω–∏–∫: "Ginger Cookie",
//   "–ø—Ä—è–Ω–∏—á–Ω—ã–π —á–µ–ª–æ–≤–µ—á–µ–∫": "Ginger Cookie",
//   –ø–µ—á–µ–Ω—å–∫–∞: "Ginger Cookie",
//   "–ø–∞—Ç–∏ —Å–ø–∞—Ä–∫–ª": "Party Sparkler",
//   –±–µ–Ω–≥–∞–ª—å—Å–∫–∏–π: "Party Sparkler",
//   –ø–∞–ª–æ—á–∫–∞: "Party Sparkler",
//   –ø–∞–ª–∫–∞: "Party Sparkler",
//   –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∏: "Jingle Bells",
//   –¥–∂–µ–ª–ª–∏: "Jelly Bunny",
//   "–¥–∂–µ–ª–ª–∏ –±–∞–Ω–∏": "Jelly Bunny",
//   –∂–µ–ª–µ–π–∫–∞: "Jelly Bunny",
//   –∂–µ–ª–µ: "Jelly Bunny",
//   –≥–ª–∏–Ω—Ç–≤–µ–π–Ω: "Spiced Wine",
//   –ª–æ–ª–∏–ø–æ–ø: "Lol Pop",
//   –ª–æ–ª–ª–∏–ø–æ–ø: "Lol Pop",
//   —Ç–æ—Ä—Ç: "Homemade Cake",
//   —Ç–æ—Ä—Ç–∏–∫: "Homemade Cake",
//   –ø–µ—Ä—Å—Ç–µ–Ω—å: "Bonded Ring",
//   –Ω–æ—Å–æ–∫: "Xmas Stocking",
//   –≤–µ–Ω–æ–∫: "Winter Wreath",
//   –∫–∞–ø–∫–µ–π–∫: "Whip Cupcake",
//   –±–∞–Ω–∫–∞: "Restless Jar",
//   —Å–≤–µ—á–∫–∞: "Eternal Candle",
//   –¥–∏–ª–¥–æ: "–±–µ—Å—Ü–µ–Ω–Ω–æ",
// };

// const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// // üì¶ –ü–∞—Ä—Å–∏–º —Å–∞–π—Ç peek.tg/stats
// const puppeteer = require("puppeteer");

// async function getGiftPriceByName(name) {
//   const browser = await puppeteer.launch({ headless: true });
//   const page = await browser.newPage();

//   // –õ–æ–≥–∏—Ä—É–µ–º, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ –±—Ä–∞—É–∑–µ—Ä–∞
//   page.on("console", (msg) => console.log("üì¶ Puppeteer:", msg.text()));

//   await page.goto("https://peek.tg/stats", { waitUntil: "networkidle2" });

//   const result = await page.evaluate((giftName) => {
//     const h3s = Array.from(document.querySelectorAll("h3"));
//     for (const h3 of h3s) {
//       const title = h3.textContent.trim();
//       console.log("üîç –ü—Ä–æ–≤–µ—Ä—è—é:", title);

//       if (title.toLowerCase().includes(giftName.toLowerCase())) {
//         const container = h3.closest(".relative.p-4");
//         const priceEl = container?.querySelector(
//           "span.text-lg.font-semibold.text-white"
//         );
//         const price = priceEl?.textContent.trim();
//         return price ? `${title} ‚Äî ${price} TON` : null;
//       }
//     }
//     return null;
//   }, name);

//   await browser.close();
//   return result;
// }

// // ü§ñ –ë–æ—Ç —Å–ª—É—à–∞–µ—Ç
// bot.on("message", async (msg) => {
//   console.log("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", msg);
//   const chatId = msg.chat.id;
//   const text = msg.text?.toLowerCase().trim();
//   if (!text) return;

//   if (text.includes("–¥–∏–ª–¥–æ")) {
//     bot.sendMessage(chatId, "–±–µ—Å—Ü–µ–Ω–Ω–æ üíã");
//     return;
//   }

//   // –ò—â–µ–º —Å–∞–º–æ–µ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
//   let matchedName = null;
//   let matchedKeyword = null;

//   for (const [keyword, name] of Object.entries(keywordToGiftName)) {
//     if (text.includes(keyword.toLowerCase())) {
//       if (!matchedKeyword || keyword.length > matchedKeyword.length) {
//         matchedKeyword = keyword;
//         matchedName = name;
//       }
//     }
//   }

//   if (!matchedName) {
//     return;
//   }

//   const priceInfo = await getGiftPriceByName(matchedName);
//   if (priceInfo) {
//     bot.sendMessage(chatId, `üéÅ ${priceInfo}`);
//   } else {
//     bot.sendMessage(chatId, "üôà –ù–µ –Ω–∞—à—ë–ª —Ü–µ–Ω—É –Ω–∞ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫.");
//   }
// });
// –∫–æ–Ω–µ—Ü

// bot.on("message", async (msg) => {
//   console.log("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", msg);
//   const chatId = msg.chat.id;
//   const text = msg.text?.toLowerCase().trim();
//   if (!text) return;

//   if (text.includes("–¥–∏–ª–¥–æ")) {
//     bot.sendMessage(chatId, "–±–µ—Å—Ü–µ–Ω–Ω–æ üíã");
//     return;
//   }
//   let matchedName = null;
//   let matchedKeyword = null;

//   for (const [keyword, name] of Object.entries(keywordToGiftName)) {
//     const regex = new RegExp(`\\b${keyword}\\b`, "i");
//     if (regex.test(text)) {
//       // –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∏–ª–∏ –¥–ª–∏–Ω–Ω–µ–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
//       if (!matchedKeyword || keyword.length > matchedKeyword.length) {
//         matchedKeyword = keyword;
//         matchedName = name;
//       }
//     }
//   }
//   // let matchedName = null;
//   // for (const [keyword, name] of Object.entries(keywordToGiftName)) {
//   //   const pattern = new RegExp(`(^|\\s)${keyword}(?=\\s|$)`, "i");
//   //   if (pattern.test(text)) {
//   //     matchedName = name;
//   //     break;
//   //   }
//   // }
//   if (!matchedName) {
//     return;
//   }

//   try {
//     const priceInfo = await getGiftPriceByName(matchedName);
//     if (priceInfo) {
//       bot.sendMessage(chatId, `${priceInfo}`);
//     } else {
//       bot.sendMessage(chatId, "üôà –ù–µ –Ω–∞—à—ë–ª —Ü–µ–Ω—É –Ω–∞ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫.");
//     }
//   } catch (err) {
//     console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ:", err);
//     bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ü–µ–Ω—ã üò¢");
//   }
// });

// require("dotenv").config();

// const TelegramBot = require("node-telegram-bot-api");
// const { TelegramClient } = require("telegram");
// const { StringSession } = require("telegram/sessions");
// const fs = require("fs");

// // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
// const BOT_TOKEN = process.env.BOT_TOKEN;
// const API_ID = parseInt(process.env.API_ID);
// const API_HASH = process.env.API_HASH;

// // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞
// const stringSession = new StringSession(process.env.SESSION_STRING);

// // –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ ‚Üí —ç–º–æ–¥–∑–∏
// const keywordToEmoji = {
//   –ø–µ–ø–µ: "üê∏",
//   —Å–µ–π–ª–æ—Ä: "üíõ",
//   –∫–µ–ø–∫–∞: "üß¢",
//   –ø–µ—Ä—Å–∏–∫: "üçë",
//   —à–ª–µ–º: "ü™ñ",
//   –∫–∞—Ä—Ç—å–µ: "üéÅ",
//   —Å—É–º–∫–∞: "üëõ",
//   –∞–ª–º–∞–∑: "üíé",
//   —à–∞—Ä–¥: "üíé",
//   –∫–æ–ª—å—Ü–æ: "üíç",
//   –∑–µ–ª—å–µ: "üß™",
//   –ª–∞–º–ø–∞: "üßû‚Äç‚ôÇÔ∏è",
//   –∫–æ—Ç–∏–∫: "üêà",
//   –∫–æ—Ç: "üêà",
//   –≥—É–±—ã: "ü´¶",
//   —á–µ—Ä–µ–ø: "üíÄ",
//   —Å–∏–≥–∞—Ä–∞: "üö¨",
//   —Å–∏–≥–∞—Ä–µ—Ç–∞: "üö¨",
//   –º–∏—à–∫–∞: "üß∏",
//   –≤—É–¥—É: "üìç",
//   —Ç—ã–∫–≤–∞: "üéÉ",
//   —Ä–æ–∑–∞: "ü•Ä",
//   —Å–≤–µ—á–∞: "üïØ",
//   —à–ª—è–ø–∞: "üé©",
//   —à–ª—è–ø–∞: "üé©",
//   —Ç–æ–ø—Ö–µ—Ç: "üé©",
//   "–ª–∞–≤ –ø–æ—É—à–Ω": "üíü",
//   –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫: "üîî",
//   "—Ü–≤–µ—Ç–æ—á–µ–∫-—á–µ—Ä–µ–ø": "üå∫",
//   –º–µ—Ç–ª–∞: "üßπ",
//   –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª—å: "ü™©",
//   —à–∞—Ä: "üîÆ",
//   —Å–µ—Ä–¥—Ü–µ: "ü´Ä",
//   –∑–≤–µ–∑–¥–∞: "‚≠êÔ∏è",
//   –±–∞–±–æ—á–∫–∞: "ü§µ",
//   —Å–∞–∫—É—Ä–∞: "üå∏",
//   –º–∞—Ñ—Ñ–∏–Ω: "üßÅ",
//   –º–µ—á–∏–∫: "‚öîÔ∏è",
//   –º–µ—á: "‚öîÔ∏è",
//   –±—É–∫–µ—Ç: "üíê",
//   "–Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π —à–∞—Ä": "‚ùÑÔ∏è",
//   –ø–µ—Ä—á–∞—Ç–∫–∏: "üß§",
//   –±–ª–æ–∫–Ω–æ—Ç: "üìî",
//   –≥—Ä–∏–±: "üçÑ",
//   –≥–ª–∞–∑: "üëÅ",
// };

// // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
// const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// bot.on("message", async (msg) => {
//   const chatId = msg.chat.id;
//   const text = msg.text?.toLowerCase().trim();
//   if (!text) return;

//   if (text.includes("–¥–∏–ª–¥–æ")) {
//     bot.sendMessage(chatId, "–±–µ—Å—Ü–µ–Ω–Ω–æ üíã");
//     return;
//   }

//   let emoji = null;
//   for (const [word, emj] of Object.entries(keywordToEmoji)) {
//     if (text.includes(word)) {
//       emoji = emj;
//       break;
//     }
//   }

//   // if (!emoji) {
//   //   bot.sendMessage(chatId, "üòï –ù–µ —É–∑–Ω–∞–ª —Å–ª–æ–≤–æ.");
//   //   return;
//   // }

//   const client = new TelegramClient(stringSession, API_ID, API_HASH, {
//     connectionRetries: 5,
//   });

//   try {
//     await client.connect(); // üëà –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é, —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π —Å–µ—Å—Å–∏–µ–π

//     const messages = await client.getMessages("GiftMonitor", { limit: 5 });

//     let foundLine = null;
//     for (const message of messages) {
//       if (!message.message) continue; // –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Ç–µ–∫—Å—Ç–∞

//       const lines = message.message.split("\n");
//       for (const line of lines) {
//         if (line.includes(emoji)) {
//           foundLine = line;
//           break;
//         }
//       }
//       if (foundLine) break;
//     }

//     if (foundLine) {
//       bot.sendMessage(chatId, `${foundLine}`);
//     }
//     // else {
//     //   bot.sendMessage(chatId, "üôà –ù–µ –Ω–∞—à—ë–ª —Ü–µ–Ω—É –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞.");
//     // }

//     await client.disconnect();
//   } catch (err) {
//     console.error("‚ùå –û—à–∏–±–∫–∞:", err);
//     bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.");
//   }
// });

// –≤–∞—Ä–∏–∞–Ω—Ç —Å —é–∑–µ—Ä–±–æ—Ç –∏ –∫–∞–Ω–∞–ª–æ–º –≤ —Ç–µ–ª–µ–≥–µ

// // const TelegramBot = require("node-telegram-bot-api");
// // const { TelegramClient } = require("telegram");
// // const { StringSession } = require("telegram/sessions");
// // const input = require("input");

// // // üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∏
// // const BOT_TOKEN = "7670371799:AAGY9dRwx7VOS_hUTR3ijlRbWCDPHWosYno";
// // const API_ID = 28574582; // –ü–æ–ª—É—á–∏ –Ω–∞ https://my.telegram.org
// // const API_HASH = "69f0193afd5aed64c51fae47eadf3d72";
// // const stringSession = new StringSession(""); // –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –æ—Å—Ç–∞–≤—å ''

// // // üîÅ –°–ª–æ–≤–∞—Ä—å –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ ‚Üí —ç–º–æ–¥–∑–∏
// // const keywordToEmoji = {
// //   –ø–µ–ø–µ: "üê∏",
// //   —Å–µ–π–ª–æ—Ä: "üíõ",
// //   –∫–µ–ø–∫–∞: "üß¢",
// //   –ø–µ—Ä—Å–∏–∫: "üçë",
// //   —à–ª–µ–º: "ü™ñ",
// //   –∫–∞—Ä—Ç—å–µ: "üéÅ",
// //   —Å—É–º–∫–∞: "üëõ",
// //   –∞–ª–º–∞–∑: "üíé",
// //   —à–∞—Ä–¥: "üíé",
// //   –∫–æ–ª—å—Ü–æ: "üíç",
// //   –∑–µ–ª—å–µ: "üß™",
// //   –ª–∞–º–ø–∞: "üßû‚Äç‚ôÇÔ∏è",
// //   –∫–æ—Ç–∏–∫: "üêà",
// //   –∫–æ—Ç: "üêà",
// //   –≥—É–±—ã: "ü´¶",
// //   —á–µ—Ä–µ–ø: "üíÄ",
// //   —Å–∏–≥–∞—Ä–∞: "üö¨",
// //   —Å–∏–≥–∞—Ä–µ—Ç–∞: "üö¨",
// //   –º–∏—à–∫–∞: "üß∏",
// //   –≤—É–¥—É: "üìç",
// //   —Ç—ã–∫–≤–∞: "üéÉ",
// //   —Ä–æ–∑–∞: "ü•Ä",
// //   —Å–≤–µ—á–∞: "üïØ",
// //   —à–ª—è–ø–∞: "üé©",
// //   "–ª–∞–≤ –ø–æ—É—à–Ω": "üíü",
// //   –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫: "üîî",
// //   "—Ü–≤–µ—Ç–æ—á–µ–∫-—á–µ—Ä–µ–ø": "üå∫",
// //   –º–µ—Ç–ª–∞: "üßπ",
// //   –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª—å: "ü™©",
// //   —à–∞—Ä: "üîÆ",
// //   —Å–µ—Ä–¥—Ü–µ: "ü´Ä",
// //   –∑–≤–µ–∑–¥–∞: "‚≠êÔ∏è",
// //   –±–∞–±–æ—á–∫–∞: "ü§µ",
// //   –º–∞—Ñ—Ñ–∏–Ω: "üßÅ",
// //   –º–µ—á–∏–∫: "‚öîÔ∏è",
// //   –º–µ—á: "‚öîÔ∏è",
// //   –±—É–∫–µ—Ç: "üíê",
// //   "–Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π —à–∞—Ä": "‚ùÑÔ∏è",
// //   –ø–µ—Ä—á–∞—Ç–∫–∏: "üß§",
// //   –±–ª–æ–∫–Ω–æ—Ç: "üìî",
// //   –≥–ª–∞–∑: "üëÅ",
// // };

// // // ‚ñ∂Ô∏è Telegram bot
// // const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// // bot.on("message", async (msg) => {
// //   const chatId = msg.chat.id;
// //   const text = msg.text?.toLowerCase();

// //   if (!text) return;

// //   const emoji = keywordToEmoji[text.trim()];
// //   //   if (!emoji) {
// //   //     bot.sendMessage(chatId, "–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞ üôÅ");
// //   //     return;
// //   //   }

// //   // –ó–∞–ø—É—Å–∫–∞–µ–º userbot
// //   const client = new TelegramClient(stringSession, API_ID, API_HASH, {
// //     connectionRetries: 5,
// //   });

// //   try {
// //     await client.start({
// //       phoneNumber: async () => await input.text("üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: "),
// //       password: async () => await input.text("üîí –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (–µ—Å–ª–∏ –µ—Å—Ç—å): "),
// //       phoneCode: async () => await input.text("üí¨ –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram: "),
// //       onError: (err) => console.log(err),
// //     });

// //     const messages = await client.getMessages("GiftMonitor", { limit: 5 });

// //     let foundLine = null;
// //     for (const message of messages) {
// //       const lines = message.message.split("\n");
// //       for (const line of lines) {
// //         if (line.includes(emoji)) {
// //           foundLine = line;
// //           break;
// //         }
// //       }
// //       if (foundLine) break;
// //     }

// //     if (foundLine) {
// //       bot.sendMessage(chatId, `üéÅ ${foundLine}`);
// //     } else {
// //       bot.sendMessage(chatId, "–ù–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ —Ü–µ–Ω—É üò¢");
// //     }

// //     await client.disconnect();
// //   } catch (err) {
// //     console.error("‚ùå –û—à–∏–±–∫–∞ userbot:", err);
// //     bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.");
// //   }
// // });
